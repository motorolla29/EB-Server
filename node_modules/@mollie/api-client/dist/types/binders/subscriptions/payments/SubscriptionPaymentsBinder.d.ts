import type TransformingNetworkClient from '../../../communication/TransformingNetworkClient';
import type Page from '../../../data/page/Page';
import { type PaymentData } from '../../../data/payments/data';
import type Payment from '../../../data/payments/Payment';
import type Callback from '../../../types/Callback';
import Binder from '../../Binder';
import { type IterateParameters, type PageParameters } from './parameters';
export default class SubscriptionPaymentsBinder extends Binder<PaymentData, Payment> {
    protected readonly networkClient: TransformingNetworkClient;
    constructor(networkClient: TransformingNetworkClient);
    /**
     * Retrieve all payments of a specific subscriptions of a customer.
     *
     * @since 3.3.0 (as `list`)
     * @see https://docs.mollie.com/reference/v2/subscriptions-api/list-subscription-payments
     */
    page(parameters: PageParameters): Promise<Page<Payment>>;
    page(parameters: PageParameters, callback: Callback<Page<Payment>>): void;
    /**
     * Retrieve all payments of a specific subscriptions of a customer.
     *
     * @since 3.6.0
     * @see https://docs.mollie.com/reference/v2/subscriptions-api/list-subscription-payments
     */
    iterate(parameters: IterateParameters): import("../../../plumbing/iteration/HelpfulIterator").default<Payment>;
}
