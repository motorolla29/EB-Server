/**
 * Converts a (synchronous) iterator to an asynchronous iterator.
 */
export default function makeAsync<T, R, N>(original: Iterator<T, R, N>): {
    next(): Promise<IteratorResult<T, R>>;
    return(value?: R): Promise<IteratorYieldResult<T> | {
        done: boolean;
        value: R;
    }>;
    throw(error: any): Promise<IteratorResult<T, R>>;
};
