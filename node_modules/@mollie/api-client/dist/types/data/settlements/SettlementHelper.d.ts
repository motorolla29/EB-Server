import type TransformingNetworkClient from '../../communication/TransformingNetworkClient';
import { type Capture } from '../../types';
import { type ThrottlingParameter } from '../../types/parameters';
import type Chargeback from '../chargebacks/Chargeback';
import Helper from '../Helper';
import type Payment from '../payments/Payment';
import type Refund from '../refunds/Refund';
import { type SettlementData } from './data';
import type SettlementModel from './SettlementModel';
export default class SettlementHelper extends Helper<SettlementData, SettlementModel> {
    protected readonly links: SettlementData['_links'];
    constructor(networkClient: TransformingNetworkClient, links: SettlementData['_links']);
    /**
     * Returns the payments that are included in this settlement.
     *
     * @since 3.7.0
     */
    getPayments(parameters?: ThrottlingParameter): import("../../plumbing/iteration/HelpfulIterator").default<Payment>;
    /**
     * Returns the refunds that are included in this settlement.
     *
     * @since 3.7.0
     */
    getRefunds(parameters?: ThrottlingParameter): import("../../plumbing/iteration/HelpfulIterator").default<Refund>;
    /**
     * Returns the chargebacks that are included in this settlement.
     *
     * @since 3.7.0
     */
    getChargebacks(parameters?: ThrottlingParameter): import("../../plumbing/iteration/HelpfulIterator").default<Chargeback>;
    /**
     * Returns the captures that are included in this settlement.
     *
     * @since 3.7.0
     */
    getCaptures(parameters?: ThrottlingParameter): import("../../plumbing/iteration/HelpfulIterator").default<Capture>;
}
