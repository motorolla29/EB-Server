import type TransformingNetworkClient from '../../communication/TransformingNetworkClient';
import type Seal from '../../types/Seal';
import type Chargeback from '../chargebacks/Chargeback';
import type Refund from '../refunds/Refund';
import type Capture from './captures/Capture';
import { type PaymentData } from './data';
import PaymentHelper from './PaymentHelper';
type Payment = Seal<Omit<PaymentData, '_embedded'> & {
    _embedded?: {
        refunds?: Refund[];
        chargebacks?: Chargeback[];
        captures?: Capture[];
    };
}, PaymentHelper>;
export default Payment;
export declare function transform(networkClient: TransformingNetworkClient, input: PaymentData): Payment;
