import type TransformingNetworkClient from '../../communication/TransformingNetworkClient';
import type Page from '../../data/page/Page';
import { type RefundData } from '../../data/refunds/data';
import type Refund from '../../data/refunds/Refund';
import type Callback from '../../types/Callback';
import Binder from '../Binder';
import { type IterateParameters, type PageParameters } from './parameters';
export default class RefundsBinder extends Binder<RefundData, Refund> {
    protected readonly networkClient: TransformingNetworkClient;
    constructor(networkClient: TransformingNetworkClient);
    /**
     * Retrieve a list of all of your refunds.
     *
     * The results are paginated. See pagination for more information.
     *
     * @since 3.0.0
     * @see https://docs.mollie.com/reference/v2/refunds-api/list-refunds
     */
    page(parameters?: PageParameters): Promise<Page<Refund>>;
    page(parameters: PageParameters, callback: Callback<Page<Refund>>): void;
    /**
     * Retrieve a list of all of your refunds.
     *
     * The results are paginated. See pagination for more information.
     *
     * @since 3.6.0
     * @see https://docs.mollie.com/reference/v2/refunds-api/list-refunds
     */
    iterate(parameters?: IterateParameters): import("../../plumbing/iteration/HelpfulIterator").default<Refund>;
}
