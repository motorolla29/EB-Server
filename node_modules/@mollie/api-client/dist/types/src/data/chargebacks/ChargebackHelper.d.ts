import type TransformingNetworkClient from '../../communication/TransformingNetworkClient';
import type Callback from '../../types/Callback';
import Helper from '../Helper';
import type Payment from '../payments/Payment';
import type Chargeback from './Chargeback';
import { type ChargebackData } from './Chargeback';
export default class ChargebackHelper extends Helper<ChargebackData, Chargeback> {
    protected readonly links: ChargebackData['_links'];
    protected readonly embedded: ChargebackData['_embedded'];
    constructor(networkClient: TransformingNetworkClient, links: ChargebackData['_links'], embedded: ChargebackData['_embedded']);
    /**
     * Returns the payment this chargeback was issued for.
     *
     * @since 3.6.0
     */
    getPayment(): Promise<Payment>;
    getPayment(callback: Callback<Array<Payment>>): void;
}
