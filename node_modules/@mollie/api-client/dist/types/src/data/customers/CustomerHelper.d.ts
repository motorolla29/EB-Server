import type TransformingNetworkClient from '../../communication/TransformingNetworkClient';
import type HelpfulIterator from '../../plumbing/iteration/HelpfulIterator';
import { type ThrottlingParameter } from '../../types/parameters';
import Helper from '../Helper';
import type Payment from '../payments/Payment';
import type Subscription from '../subscriptions/Subscription';
import type Customer from './Customer';
import { type CustomerData } from './Customer';
import type Mandate from './mandates/Mandate';
export default class CustomerHelper extends Helper<CustomerData, Customer> {
    protected readonly links: CustomerData['_links'];
    constructor(networkClient: TransformingNetworkClient, links: CustomerData['_links']);
    /**
     * Returns the mandates belonging to the customer.
     *
     * @since 3.6.0
     */
    getMandates(parameters?: ThrottlingParameter): HelpfulIterator<Mandate>;
    /**
     * Returns the subscriptions belonging to the customer.
     *
     * @since 3.6.0
     */
    getSubscriptions(parameters?: ThrottlingParameter): HelpfulIterator<Subscription>;
    /**
     * Returns the payments belonging to the customer.
     *
     * @since 3.6.0
     */
    getPayments(parameters?: ThrottlingParameter): HelpfulIterator<Payment>;
}
